$(function(){$("body").on("input propertychange",".floating-label-form-group",function(o){$(this).toggleClass("floating-label-form-group-with-value",!!$(o.target).val())}).on("focus",".floating-label-form-group",function(){$(this).addClass("floating-label-form-group-with-focus")}).on("blur",".floating-label-form-group",function(){$(this).removeClass("floating-label-form-group-with-focus")})}),jQuery(document).ready(function(o){var s=1170;if(o(window).width()>s){var i=o(".navbar-custom").height();o(window).on("scroll",{previousTop:0},function(){var s=o(window).scrollTop();s<this.previousTop?s>0&&o(".navbar-custom").hasClass("is-fixed")?o(".navbar-custom").addClass("is-visible"):o(".navbar-custom").removeClass("is-visible is-fixed"):s>this.previousTop&&(o(".navbar-custom").removeClass("is-visible"),s>i&&!o(".navbar-custom").hasClass("is-fixed")&&o(".navbar-custom").addClass("is-fixed")),this.previousTop=s})}});
var hoverColor="rgba(0, 0, 200, 0.3)";$(document).ready(function(){!function(o,n,e,t,i,a,r){o.GoogleAnalyticsObject=i,o[i]=o[i]||function(){(o[i].q=o[i].q||[]).push(arguments)},o[i].l=1*new Date,a=n.createElement(e),r=n.getElementsByTagName(e)[0],a.async=1,a.src=t,r.parentNode.insertBefore(a,r)}(window,document,"script","https://www.google-analytics.com/analytics.js","ga"),ga("create","UA-82494716-1","auto"),ga("send","pageview"),$(".dropdown").on("show.bs.dropdown",function(o){$(this).find(".dropdown-menu").first().stop(!0,!0).slideDown()}),$(".dropdown").on("hide.bs.dropdown",function(o){$(this).find(".dropdown-menu").first().stop(!0,!0).slideUp()});var o=40;$(".navbar li a").click(function(n){if(href=$(this).attr("href"),href.indexOf("#")!=-1&&"/"==window.location.pathname){n.preventDefault();var e=$(href).position(),t=e.top,t=e.top;$("html, body").animate({scrollTop:t-o,scrollLeft:0},500,"easeInCubic")}else href.indexOf("#")!=-1&&(window.location.href="/"+href)});var n=$(".div-button").css("background-color");$(".div-button").hover(function(){$(this).animate({backgroundColor:hoverColor},500)},function(){$(this).stop().animate({backgroundColor:n},500)}),$(".inactive").on("click",function(o){$(this).removeClass("inactive").addClass("active")}),$("h1").on("click",function(o){$(this).effect("bounce")})});
$(document).ready(function(){$(".project-well").on("click",function(){$(this).find("p").slideToggle(),console.log("Expanding well"),$(this).find("i").toggleClass("animated").toggleClass("faa-spin")})});
//# sourceMappingURL=data:application/json;base64,
