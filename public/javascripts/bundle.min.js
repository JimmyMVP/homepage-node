var hoverColor="rgba(0, 0, 200, 0.3)";$(document).ready(function(){var o=40;$(".navbar li a").click(function(n){n.preventDefault(),position=$($(this).attr("href")).position();var i=position.top;$("html, body").animate({scrollTop:i-o,scrollLeft:0},500,"easeInCubic")});var n=$(".div-button").css("background-color");$(".div-button").hover(function(){console.log("Hovering"),$(this).animate({backgroundColor:hoverColor},500)},function(){$(this).stop().animate({backgroundColor:n},500)}),$(".inactive").on("click",function(o){$(this).removeClass("inactive").addClass("active")})}),$(document).ready(function(){$(".project-well").on("click",function(){$(this).find("p").slideToggle(),console.log("Expanding well")})});var hoverColor="rgba(0, 0, 200, 0.3)";$(document).ready(function(){var o=40;$(".navbar li a").click(function(n){n.preventDefault(),position=$($(this).attr("href")).position();var i=position.top;$("html, body").animate({scrollTop:i-o,scrollLeft:0},500,"easeInCubic")});var n=$(".div-button").css("background-color");$(".div-button").hover(function(){console.log("Hovering"),$(this).animate({backgroundColor:hoverColor},500)},function(){$(this).stop().animate({backgroundColor:n},500)}),$(".inactive").on("click",function(o){$(this).removeClass("inactive").addClass("active")})}),$(document).ready(function(){$(".project-well").on("click",function(){$(this).find("p").slideToggle(),console.log("Expanding well")})});var hoverColor="rgba(0, 0, 200, 0.3)";$(document).ready(function(){var o=40;$(".navbar li a").click(function(n){n.preventDefault(),position=$($(this).attr("href")).position();var i=position.top;$("html, body").animate({scrollTop:i-o,scrollLeft:0},500,"easeInCubic")});var n=$(".div-button").css("background-color");$(".div-button").hover(function(){console.log("Hovering"),$(this).animate({backgroundColor:hoverColor},500)},function(){$(this).stop().animate({backgroundColor:n},500)}),$(".inactive").on("click",function(o){$(this).removeClass("inactive").addClass("active")})}),$(document).ready(function(){$(".project-well").on("click",function(){$(this).find("p").slideToggle(),console.log("Expanding well")})});var hoverColor="rgba(0, 0, 200, 0.3)";$(document).ready(function(){var o=40;$(".navbar li a").click(function(n){n.preventDefault(),position=$($(this).attr("href")).position();var i=position.top;$("html, body").animate({scrollTop:i-o,scrollLeft:0},500,"easeInCubic")});var n=$(".div-button").css("background-color");$(".div-button").hover(function(){console.log("Hovering"),$(this).animate({backgroundColor:hoverColor},500)},function(){$(this).stop().animate({backgroundColor:n},500)}),$(".inactive").on("click",function(o){$(this).removeClass("inactive").addClass("active")})}),$(document).ready(function(){$(".project-well").on("click",function(){$(this).find("p").slideToggle(),console.log("Expanding well")})});
var hoverColor="rgba(0, 0, 200, 0.3)";$(document).ready(function(){var o=40;$(".navbar li a").click(function(t){t.preventDefault(),position=$($(this).attr("href")).position();var i=position.top;$("html, body").animate({scrollTop:i-o,scrollLeft:0},500,"easeInCubic")});var t=$(".div-button").css("background-color");$(".div-button").hover(function(){console.log("Hovering"),$(this).animate({backgroundColor:hoverColor},500)},function(){$(this).stop().animate({backgroundColor:t},500)}),$(".inactive").on("click",function(o){$(this).removeClass("inactive").addClass("active")})});
$(document).ready(function(){$(".project-well").on("click",function(){$(this).find("p").slideToggle(),console.log("Expanding well")})});
//# sourceMappingURL=data:application/json;base64,
